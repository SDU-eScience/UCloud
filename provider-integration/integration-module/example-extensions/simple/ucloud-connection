#!/usr/bin/env python3
import json
import sys
import os
from helper import *

if os.getuid() != 0:
    res = subprocess.run(['sudo', '-S', sys.argv[0], sys.argv[1]], stdin=open('/dev/null'))
    if res.returncode != 0:
        print("ucloud-extension failed. Is sudo misconfigured?")
        exit(1)
    exit(0)

with open(sys.argv[1]) as fp:
    request = json.load(fp)

username = request['username']
local_username = re.sub('\W+', '',username).lower()
response = {}

uid = get_uid_by_username(local_username)
if uid != None:
    # User already exists. In that case we want to simply return the appropriate ID.
    response['uid'] = uid
    response['gid'] = uid # TODO(Dan): This is overly simplified
else:
    # We need to create a user.
    result = run_command(['/usr/bin/mkdir', f'/home/{local_username}'])
    result = run_command(['/usr/sbin/useradd', '-G', 'ucloud', '-m', local_username, '-d', f'/home/{local_username}'])
    if result.returncode != 0:
        print("Failed to create a user!")
        print(result.stdout)
        print(result.stderr)
        exit(1)
    result = run_command(['/usr/bin/chown', f'{local_username}:', f'/home/{local_username}'])

    uid = get_uid_by_username(local_username)
    if uid == None:
        print("Failed to create a user! Could not look it up after calling useradd.")
        exit(1)

    slurm_account_create(local_username)
    slurm_user_create(local_username, local_username)
    slurm_account_set_quota(local_username, 0)

    response['uid'] = uid
    response['gid'] = uid

print(json.dumps(response))
